#!/usr/bin/env bash

##############################################################################
##
##  @APP_NAME@ start up script for UN*X
##
##############################################################################

# Attempt to set APP_HOME
# Resolve links: $0 may be a link
PRG="$0"
# Need this for relative symlinks.
while [ -h "$PRG" ] ; do
    ls=`ls -ld "$PRG"`
    link=`expr "$ls" : '.*-> \(.*\)$'`
    if expr "$link" : '/.*' > /dev/null; then
        PRG="$link"
    else
        PRG=`dirname "$PRG"`"/$link"
    fi
done
SAVED="`pwd`"
RELATIVE_APP_HOME=@RELATIVE_APP_HOME@
cd "`dirname \"$PRG\"`/$RELATIVE_APP_HOME" >/dev/null
APP_HOME="`pwd -P`"
cd "$SAVED" >/dev/null

APP_NAME="@APP_NAME@"
APP_BASE_NAME=`basename "$0"`

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD="$JAVA_HOME/jre/sh/java"
    else
        JAVACMD="$JAVA_HOME/bin/java"
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD="java"
    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
fi

# Add default JVM options here. You can also use JAVA_OPTS and @APP_VARIABLE_PREFIX@_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS='@DEFAULT_JVM_ARGS@'
CLASSPATH=$APP_HOME/@JAR_PATH@
MAIN_CLASSNAME='@MAIN_CLASSNAME@'

warn () {
    echo "$*"
}

die () {
    echo
    echo "$*"
    echo
    exit 1
}


# Escape application args
save () {
    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
    echo " "
}
APP_ARGS=$(save "$@")

# Collect all arguments for the java command, following the shell quoting and substitution rules
eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $@APP_VARIABLE_PREFIX@_OPTS -classpath "\"$CLASSPATH\"" "$MAIN_CLASSNAME" "$APP_ARGS"

exec "$JAVACMD" "$@"
